'use client';
import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import './globals.css';
import { TonConnect, TonConnectUIProvider } from '@tonconnect/ui-react';
import { createContext, useEffect, useState } from 'react';
import { useTonConnect } from '@/hooks/useTonConnect';
import { Provider } from 'react-redux';
import store from '@/services/store';
import { appConfig } from '@/services/appConfig';
import GlobalContext from '@/services/context';

const inter = Inter({ subsets: ['latin'] });

// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// };

interface GlobalContextType {
  openDrawer: boolean;
  setOpenDrawer: React.Dispatch<React.SetStateAction<boolean>>;
}

// Create the context outside the component

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [openDrawer, setOpenDrawer] = useState(false);

  const value = { openDrawer, setOpenDrawer };

  useEffect(() => {
    document.title = 'Bazooka Launchpad'; // Set title here
  }, []);

  return (
    <html className={openDrawer ? 'scrollOff' : 'scrollOn'} lang="en">
      <head>{/* Additional head elements */}</head>
      <Provider store={store}>
        <TonConnectUIProvider manifestUrl={appConfig.tonManifestUrl}>
          <GlobalContext.Provider value={value}>
            <body className={inter.className}>{children}</body>
          </GlobalContext.Provider>
        </TonConnectUIProvider>
      </Provider>
    </html>
  );
}
